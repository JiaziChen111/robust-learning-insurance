function SimulateV(y_draw0,V0,Para,c,Q,x_state,PolicyRules,dgp)

close all
Y=Para.Y;
delta=Para.delta;
YSize=Para.YSize;
P1=Para.P1;
P2=Para.P2;
theta1=Para.theta_1;
theta2=Para.theta_1;
VMax=max(Para.VGrid')';
VMax=min(Para.VGrid')';
ra=Para.gamma;

y_draw(1)=y_draw0;
V(1)=V0;
xtest=[y_draw(1) V(1)];
xInit=GetInitalPolicyApprox(xtest,x_state,PolicyRules);
resQNew=getQNew(z_draw(i-1),pi_bayes(i-1),V(i-1),c,Q,Para,xInit);
tic
for i=2:Para.N
    switch dgp
        case 'RefModelAgent1'
           y_dist=P1(y_draw(i-1),:);
        case 'RefModelAgent2'
           y_dist=P2(y_draw(i-1),:);
            case 'DistModelAgent1'
            y_dist=P1(y_draw(i-1),:).*resQNew.Distfactor1;   
            case 'DistModelAgent2'
            y_dist=P2(y_draw(i-1),:).*resQNew.Distfactor2;   
    end
    
    y_draw(i)=discretesample(y_dist, 1);
   
   
        
        
        
        pistar=pi_m_star(1);
        %%
%  pi_m_star= P_M*squeeze(P(z_draw(i-1),z_draw(i),:)).*pi_m'/sum(P_M*squeeze(P(z_draw(i-1),z_draw(i),:)).*pi_m');
  pi_bayes(i)=pi_m_star(1);
%V(i)=funeval(VStarC(z_draw(i),:)',FuncVStar(z_draw(i)),[ pi_bayes(i) V(i-1)]);

xtest=[z_draw(i-1) pi_bayes(i-1) V(i-1)];
xInit=GetInitalPolicyApprox(xtest,x_state,PolicyRules);
resQNew=getQNew(z_draw(i-1),pi_bayes(i-1),V(i-1),c,Q,Para,xInit);
V(i)=resQNew.VStar(z_draw(i));
pi_dist1(i)=resQNew.DistPi_agent1;
pi_dist2(i)=resQNew.DistPi_agent2;

if V(i) > VMax(z_draw(i))
    V(i)=VMax(z_draw(i));
end
if V(i) < VMin(z_draw(i))
    V(i)=VMin(z_draw(i));
end


if mod(i,Para.N/10)==0
    disp('Executing iteration..');
    disp(i);
    toc
    tic
end
xtest(1);
MPR_draw(i-1)=resQNew.MPR;
P_draw(i-1)=funeval(coeffPD(z_draw(i-1),:)',PD(z_draw(i-1)),[pi_bayes(i-1) V(i-1)])*Y(z_draw(i-1));
Lambda_draw(i-1)=resQNew.Lambda;
end




save([Para.DataPath 'SimData.mat'] ,'z_draw' ,'m_draw' , 'pi_bayes','V', 'pi_dist1', 'MPR_draw','pi_dist2','Lambda_draw','P_draw','Para')
  